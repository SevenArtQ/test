import pandas as pd
import os
from datetime import datetime
import io

class ExcelService:
    EXCEL_DIR = "excel_files"
    
    @staticmethod
    async def read_excel(file_path: str) -> str:
        """–ß—Ç–µ–Ω–∏–µ Excel —Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–µ–º"""
        try:
            df = pd.read_excel(file_path)
            info = (
                f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ:\n"
                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {len(df)}\n"
                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤: {len(df.columns)}\n"
                f"–°—Ç–æ–ª–±—Ü—ã: {', '.join(df.columns)}\n\n"
                f"–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫:\n{df.head().to_string()}"
            )
            return info
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ Excel —Ñ–∞–π–ª–∞: {e}")
            return "–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞"
            
    @staticmethod
    async def edit_excel(file_path: str, commands: str) -> str:
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Excel —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–º–∞–Ω–¥"""
        try:
            df = pd.read_excel(file_path)
            
            # –†–∞–∑–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
            if "—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å" in commands.lower():
                column = commands.split("–ø–æ")[1].strip()
                df = df.sort_values(by=column)
            
            elif "—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å" in commands.lower():
                condition = commands.split("–≥–¥–µ")[1].strip()
                df = df.query(condition)
                
            elif "–¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ–ª–±–µ—Ü" in commands.lower():
                column_name = commands.split("—Å—Ç–æ–ª–±–µ—Ü")[1].strip()
                df[column_name] = ""
                
            elif "—É–¥–∞–ª–∏—Ç—å —Å—Ç–æ–ª–±–µ—Ü" in commands.lower():
                column_name = commands.split("—Å—Ç–æ–ª–±–µ—Ü")[1].strip()
                df = df.drop(columns=[column_name])
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            output_path = f"{ExcelService.EXCEL_DIR}/edited_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
            os.makedirs(ExcelService.EXCEL_DIR, exist_ok=True)
            df.to_excel(output_path, index=False)
            
            return output_path
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Excel —Ñ–∞–π–ª–∞: {e}")
            return "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞"
            
    @staticmethod
    async def create_excel(data: str) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Excel —Ñ–∞–π–ª–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞
            lines = data.strip().split('\n')
            headers = lines[0].split(',')
            rows = [line.split(',') for line in lines[1:]]
            
            df = pd.DataFrame(rows, columns=headers)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            output_path = f"{ExcelService.EXCEL_DIR}/new_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
            os.makedirs(ExcelService.EXCEL_DIR, exist_ok=True)
            df.to_excel(output_path, index=False)
            
            return output_path
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Excel —Ñ–∞–π–ª–∞: {e}")
            return "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞" 